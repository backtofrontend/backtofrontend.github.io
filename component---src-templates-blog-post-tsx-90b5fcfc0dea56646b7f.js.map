{"version":3,"sources":["webpack:///./src/templates/blog-post.tsx"],"names":["BlogPostTemplate","data","pageContext","location","post","markdownRemark","console","log","siteTitle","site","siteMetadata","title","previous","next","frontmatter","description","excerpt","style","marginTop","rhythm","marginBottom","scale","display","date","fields","readingTime","text","updated","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","to","slug","rel","pageQuery"],"mappings":"2OAsGeA,UAjFU,SAAC,GAIG,IAHzBC,EAGyB,EAHzBA,KACAC,EAEyB,EAFzBA,YACAC,EACyB,EADzBA,SAEMC,EAAOH,EAAKI,eAClBC,QAAQC,IAAI,OAAQH,GACpB,IAAMI,EAAYP,EAAKQ,KAAKC,aAAaC,MACjCC,EAAmBV,EAAnBU,SAAUC,EAASX,EAATW,KAElB,OACI,kBAAC,IAAD,CAAQV,SAAUA,EAAUQ,MAAOH,GAC/B,kBAAC,IAAD,CACIG,MAAOP,EAAKU,YAAYH,MACxBI,YAAaX,EAAKU,YAAYC,aAAeX,EAAKY,UAEtD,iCACI,gCACI,wBACIC,MAAO,CACHC,UAAWC,YAAO,GAClBC,aAAc,IAGjBhB,EAAKU,YAAYH,OAEtB,uBACIM,MAAK,iBACEI,aAAM,IADR,CAEDC,QAAS,QACTF,aAAcD,YAAO,MAJ7B,aAOef,EAAKU,YAAYS,KAPhC,KAOwC,IACnCnB,EAAKoB,OAAOC,YAAYC,KAR7B,KAQqC,IAChCtB,EAAKU,YAAYa,SACd,gDAAYvB,EAAKU,YAAYa,WAIzC,6BAASC,wBAAyB,CAAEC,OAAQzB,EAAK0B,QACjD,wBACIb,MAAO,CACHG,aAAcD,YAAO,MAG7B,gCACI,kBAAC,IAAD,QAIR,6BACI,wBACIF,MAAO,CACHK,QAAS,OACTS,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGb,4BACKtB,GACG,kBAAC,OAAD,CAAMuB,GAAIvB,EAASY,OAAOY,KAAMC,IAAI,QAApC,KACOzB,EAASE,YAAYH,QAIpC,4BACKE,GACG,kBAAC,OAAD,CAAMsB,GAAItB,EAAKW,OAAOY,KAAMC,IAAI,QAC3BxB,EAAKC,YAAYH,MADtB,WAarB,IAAM2B,EAAY","file":"component---src-templates-blog-post-tsx-90b5fcfc0dea56646b7f.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Bio from '../components/bio'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport { rhythm, scale } from '../utils/typography'\n\ninterface BlogPostTemplateProps {\n    data: {\n        markdownRemark: any\n        site: {\n            siteMetadata: {\n                title: string\n            }\n        }\n    }\n    pageContext: any\n    location: Location\n}\n\nconst BlogPostTemplate = ({\n    data,\n    pageContext,\n    location,\n}: BlogPostTemplateProps) => {\n    const post = data.markdownRemark\n    console.log('post', post)\n    const siteTitle = data.site.siteMetadata.title\n    const { previous, next } = pageContext\n\n    return (\n        <Layout location={location} title={siteTitle}>\n            <SEO\n                title={post.frontmatter.title}\n                description={post.frontmatter.description || post.excerpt}\n            />\n            <article>\n                <header>\n                    <h1\n                        style={{\n                            marginTop: rhythm(1),\n                            marginBottom: 0,\n                        }}\n                    >\n                        {post.frontmatter.title}\n                    </h1>\n                    <p\n                        style={{\n                            ...scale(-1 / 5),\n                            display: `block`,\n                            marginBottom: rhythm(1),\n                        }}\n                    >\n                        Posted on {post.frontmatter.date} |{' '}\n                        {post.fields.readingTime.text} |{' '}\n                        {post.frontmatter.updated && (\n                            <>Updated: {post.frontmatter.updated}</>\n                        )}\n                    </p>\n                </header>\n                <section dangerouslySetInnerHTML={{ __html: post.html }} />\n                <hr\n                    style={{\n                        marginBottom: rhythm(1),\n                    }}\n                />\n                <footer>\n                    <Bio />\n                </footer>\n            </article>\n\n            <nav>\n                <ul\n                    style={{\n                        display: `flex`,\n                        flexWrap: `wrap`,\n                        justifyContent: `space-between`,\n                        listStyle: `none`,\n                        padding: 0,\n                    }}\n                >\n                    <li>\n                        {previous && (\n                            <Link to={previous.fields.slug} rel=\"prev\">\n                                ← {previous.frontmatter.title}\n                            </Link>\n                        )}\n                    </li>\n                    <li>\n                        {next && (\n                            <Link to={next.fields.slug} rel=\"next\">\n                                {next.frontmatter.title} →\n                            </Link>\n                        )}\n                    </li>\n                </ul>\n            </nav>\n        </Layout>\n    )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n    query BlogPostBySlug($slug: String!) {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        markdownRemark(fields: { slug: { eq: $slug } }) {\n            id\n            excerpt(pruneLength: 160)\n            html\n            fields {\n                readingTime {\n                    text\n                }\n            }\n            frontmatter {\n                title\n                date(formatString: \"MMMM DD, YYYY\")\n                updated(formatString: \"MMMM DD, YYYY\")\n                description\n            }\n        }\n    }\n`\n"],"sourceRoot":""}